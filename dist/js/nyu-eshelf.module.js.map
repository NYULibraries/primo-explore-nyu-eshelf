{"version":3,"sources":["../../src/js/nyu-eshelf.module.js"],"names":["angular","module","config","$httpProvider","defaults","useXDomain","withCredentials","headers","common","constant","myEshelfButtonClasses","myEshelf","guestEshelf","addToEshelf","inEshelf","inGuestEshelf","loginToSave","adding","deleting","error","defaultUrls","pdsUrl","base","callingSystem","eshelfBaseUrl","institution","factory","$location","mergedConfig","merge","protocol","host","port","$http","initialized","csrfToken","loggedIn","initEshelf","svc","url","envConfig","Date","now","get","then","response","console","checkEshelf","externalId","data","length","filter","item","_response","generateRequest","httpMethod","test","toUpperCase","request","method","failure","success","status","run","nyuEshelfService","controller","$rootScope","$scope","$window","ctrl","$onInit","prmSearchResultAvailabilityLineCtrl","result","pnx","control","recordid","elementId","isFullView","recordData","primoExploreCtrl","userSessionManagerService","isGuest","primoBaseUrl","encodeURIComponent","absUrl","inEshelfText","setElementText","running","disabled","eshelfCheckBoxTrigger","removeFromEshelf","toggleInEshelf","component","require","template","elementText","eshelfUrl","openEshelf","window","open"],"mappings":"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","file":"nyu-eshelf.module.js","sourcesContent":["angular\n  // Name our module\n  .module('nyuEshelf', [])\n  // Set config for using CORS within module\n  .config(function($httpProvider) {\n    //Enable cross domain calls\n    $httpProvider.defaults.useXDomain = true;\n    //Enable passing of cookies for CORS calls\n    //Note: CORS will absolutely not work without this\n    $httpProvider.defaults.withCredentials = true;\n\n    //Remove the header containing XMLHttpRequest used to identify ajax call\n    //that would prevent CORS from working\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  })\n  // Constant for the defaults to all config values\n  // Can be overriden with nyuEshelfConfig constant\n  .constant('nyuEshelfConfigDefaults', {\n    myEshelfButtonClasses: 'button-over-dark',\n    myEshelf: 'My e-Shelf',\n    guestEshelf: 'Guest e-Shelf',\n    addToEshelf: \"Add to e-Shelf\",\n    inEshelf: \"In e-Shelf\",\n    inGuestEshelf: \"In guest e-Shelf\",\n    loginToSave: \"login to save permanently\",\n    adding: \"Adding to e-Shelf...\",\n    deleting: \"Removing from e-Shelf...\",\n    error: \"Could not connect to e-Shelf\",\n    defaultUrls: {\n      pdsUrl: {\n        base: 'https://pdsdev.library.nyu.edu/pds',\n        callingSystem: 'primo'\n      },\n      eshelfBaseUrl: 'https://qa.eshelf.library.nyu.edu',\n      institution: 'NYU'\n    },\n    \"bobcat.library.nyu.edu\": {\n      pdsUrl: {\n        base: 'https://pds.library.nyu.edu/pds',\n        callingSystem: 'primo'\n      },\n      eshelfBaseUrl: 'https://eshelf.library.nyu.edu',\n      institution: 'NYU'\n    }\n  })\n  // Reuseable factory for setting config\n  .factory('nyuEshelfConfigService', ['nyuEshelfConfigDefaults', 'nyuEshelfConfig', '$location', function(defaults, config, $location) {\n    // Merge default config values with local configs\n    // Note: Be aware that angular.merge is deprecated and will not work in > 2\n    let mergedConfig = angular.merge(defaults, config);\n    // Set primoBaseUrl for pds return script based on current instance\n    mergedConfig['primoBaseUrl'] = $location.protocol() + \"://\" + $location.host() + \":\" + $location.port();\n    // Setup the environment config based on current host matching config obj\n    mergedConfig['envConfig'] = (typeof mergedConfig[$location.host()] === 'undefined') ? mergedConfig.defaultUrls : mergedConfig[$location.host()];\n    return mergedConfig;\n  }])\n  // Reusable factory for initiating an 'add to eshelf' input element\n  .factory('nyuEshelfService', ['nyuEshelfConfigService', '$http', (config, $http) => {\n    return {\n      initialized: false, // Is the csrfToken initialized on first load of the page?\n      csrfToken: '', // Storage spot for the csrfToken\n      loggedIn: false, // Are we logged in?,\n      // Make an initial call to eshelf to find out if any of the current\n      // records are already in our eshelf and geet the first csrfToken\n      initEshelf: function() {\n        let svc = this; // For maintaining service scoping in the function below\n        // Eshelf API to setup csrfToken and avoid that pesky cache\n        let url = config.envConfig.eshelfBaseUrl + \"/records/from/primo.json?per=all&_=\" + Date.now();\n        // Get the csrfToken already\n        $http.get(url).then(\n          function(response){\n            if (response.headers('x-csrf-token')) {\n              svc.csrfToken = response.headers('x-csrf-token');\n              svc.initialized = true;\n            }\n          },\n          // Oops\n          function(response){\n            console.error(\"Error in e-Shelf CORS API\");\n            console.error(\"Response: \" + response);\n          }\n        );\n      },\n      // Check eshelf for existing externalId\n      checkEshelf: function(externalId) {\n        // Use eshelf API to check if record with externalId is in current user's eshelf\n        let url = config.envConfig.eshelfBaseUrl + \"/records/from/primo.json?per=all&external_id[]=\" + externalId;\n        let svc = this; // For maintaining service scoping in the function below\n        $http.get(url).then(\n            function(response){\n              if (response.data.length > 0) {\n                if (response.data.filter(item => item[\"external_id\"] == externalId)) {\n                  // If we found the externalId in the response set that\n                  // id on the service object to true so we can reference it later\n                  svc[externalId] = true;\n                }\n              }\n            },\n            // Oops, set an error object\n            function(_response){\n              svc[externalId+'_error'] = true;\n            }\n         );\n      },\n      // Generate a generic http request for the different types of calls to eshelf\n      generateRequest: function(httpMethod, data) {\n        // Whitelist http methods DELETE and POST\n        if (!/^(DELETE|POST)$/.test(httpMethod.toUpperCase())) {\n          return {};\n        }\n        // Cors headers\n        let headers = { 'X-CSRF-Token': this.csrfToken, 'Content-type': 'application/json;charset=utf-8' };\n        let request = {\n          method: httpMethod.toUpperCase(),\n          url: config.envConfig.eshelfBaseUrl + \"/records.json\",\n          headers: headers,\n          data: data\n        };\n        return request;\n      },\n      failure: function(response, externalId) {\n        this[externalId+'_error'] = true;\n      },\n      // Set the new csrfToken to the response header on success\n      success: function(response, externalId) {\n        if (response.headers('x-csrf-token')) {\n          this.csrfToken = response.headers('x-csrf-token');\n        }\n\n        if (response.status == 201) {\n          this[externalId] = true;\n        } else {\n          delete this[externalId];\n        }\n      }\n    };\n  }])\n  // Run directive before everything else runs\n  .run(['nyuEshelfService', function(nyuEshelfService){\n    // Initialize eshelf session and get CSRF-Token\n    if (!nyuEshelfService.initialized) {\n      nyuEshelfService.initEshelf();\n    }\n  }])\n  // Controller for the eshelf input form component\n  .controller('nyuEshelfController', ['nyuEshelfService', 'nyuEshelfConfigService', '$rootScope', '$scope', '$http', '$location', '$window', function(nyuEshelfService, config, $rootScope, $scope, $http, $location, $window) {\n    const ctrl = this;\n\n    this.$onInit = function() {\n      // Primo ID\n      $scope.externalId = ctrl.prmSearchResultAvailabilityLineCtrl.result.pnx.control.recordid[0];\n      $scope.elementId = \"eshelf_\" + $scope.externalId + ((ctrl.prmSearchResultAvailabilityLineCtrl.isFullView) ? \"_full\" : \"_brief\");\n      // JSON that eshelf is expecting\n      $scope.recordData = { \"record\": { \"external_system\": \"primo\", \"external_id\": $scope.externalId }};\n      // Determine if we're logged into Primo/PDS\n      nyuEshelfService.loggedIn = !ctrl.primoExploreCtrl.userSessionManagerService.isGuest();\n      // Check if this record is in eshelf\n      nyuEshelfService.checkEshelf($scope.externalId);\n      // Determine what text to show if the record is in eshelf based on logged in status\n      // Build the pds url\n      $scope.pdsUrl = config.envConfig.pdsUrl.base + \"?func=load-login&calling_system=\" + config.envConfig.pdsUrl.callingSystem + \"&institute=\" + config.envConfig.institution + \"&url=\" + config.primoBaseUrl + \"/primo_library/libweb/pdsLogin?targetURL=\" + $window.encodeURIComponent($location.absUrl()) + \"&from-new-ui=1&authenticationProfile=BASE_PROFILE\";\n      $scope.inEshelfText = (function() {\n        if (nyuEshelfService.loggedIn) {\n          return config.inEshelf;\n        } else {\n          return config.inGuestEshelf + ((config.loginToSave && config.loginToSave != '') ? \" (<a href=\\\"\" + $scope.pdsUrl + \"\\\">\" + config.loginToSave + \"</a>)\" : '');\n        }\n      })();\n    };\n    // Determine what text to show based on running status of the http call\n    $scope.setElementText = function() {\n      if (nyuEshelfService[$scope.externalId+'_error']) { return config.error; }\n      if (nyuEshelfService[$scope.externalId]) {\n        return ($scope.running) ? config.deleting : $scope.inEshelfText;\n      } else {\n        return ($scope.running) ? config.adding : config.addToEshelf;\n      }\n    };\n    // Disable the input if there is an error or the process is running\n    $scope.disabled = () => (nyuEshelfService[$scope.externalId+'_error'] || $scope.running);\n    // In eshelf?\n    $scope.inEshelf = () => (nyuEshelfService[$scope.externalId] == true);\n    // Toggle the bind function on the input element\n    $scope.eshelfCheckBoxTrigger = () => {\n      ($scope.inEshelf()) ? $scope.removeFromEshelf() : $scope.addToEshelf();\n    };\n    // Alias to add\n    $scope.addToEshelf = () => { $scope.toggleInEshelf('post'); };\n    // Alias to delete\n    $scope.removeFromEshelf = () => { $scope.toggleInEshelf('delete'); };\n    // Wrap the generic request\n    $scope.toggleInEshelf = function(httpMethod) {\n      $http(nyuEshelfService.generateRequest(httpMethod, $scope.recordData))\n        .then(\n          function(response) { $scope.running = false; nyuEshelfService.success(response, $scope.externalId); },\n          function(response) { nyuEshelfService.failure(response, $scope.externalId); }\n        );\n    };\n  }])\n  // Setup an input element to toggle eshelf\n  .component('nyuEshelf', {\n    controller: 'nyuEshelfController',\n    require: {\n      prmSearchResultAvailabilityLineCtrl: '^prmSearchResultAvailabilityLine',\n      primoExploreCtrl: '^primoExplore'\n    },\n    template: '<div class=\"nyu-eshelf neutralized-button md-button md-primoExplore-theme\">' +\n      '<input ng-checked=\"inEshelf()\" aria-label=\"Toggle in e-Shelf\" ng-disabled=\"disabled()\" id=\"{{ elementId }}\" type=\"checkbox\" data-eshelf-external-id=\"{{ externalId }}\" ng-click=\"running = true; eshelfCheckBoxTrigger()\" >' +\n      '<label for=\"{{ elementId }}\"><span ng-bind-html=\"setElementText()\"></span></label>' +\n    '</div>'\n  })\n  // Controller for topbar 'my eshelf' button\n  .controller('nyuEshelfToolbarController', ['nyuEshelfService', 'nyuEshelfConfigService', '$scope', function(nyuEshelfService, config, $scope) {\n\n    this.$onInit = function() {\n      $scope.loggedIn = !this.primoExploreCtrl.userSessionManagerService.isGuest();\n      $scope.myEshelfButtonClasses = config.myEshelfButtonClasses;\n      $scope.elementText = $scope.loggedIn ? config.myEshelf : config.guestEshelf;\n      $scope.eshelfUrl = config.envConfig.eshelfBaseUrl + \"/?institution=\" + config.envConfig.institution;\n      $scope.openEshelf = function() {\n        window.open($scope.eshelfUrl, '_blank');\n      };\n    };\n  }])\n  // Setup a new button component to add to the topbar\n  .component('nyuEshelfToolbar', {\n    controller: 'nyuEshelfToolbarController',\n    require: {\n      primoExploreCtrl: '^primoExplore'\n    },\n    template: '<md-button class=\"button-with-icon zero-margin md-button md-primoExplore-theme md-ink-ripple {{myEshelfButtonClasses}}\" type=\"button\" aria-label=\"Go to {{ elementText }}\" ng-click=\"openEshelf()\">'+\n                '<md-tooltip md-direction=\"bottom\" md-delay=\"500\">Go to {{ elementText }}</md-tooltip><prm-icon style=\"z-index:1\" icon-type=\"svg\" svg-icon-set=\"image\" icon-definition=\"ic_collections_bookmark_24px\" aria-label=\"Go to {{elementText }}\"></prm-icon>'+\n                '<span class=\"hide-xs\">{{ elementText }}</span>'+\n              '</md-button>'\n  });\n"]}